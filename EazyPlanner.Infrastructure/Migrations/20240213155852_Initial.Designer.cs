// <auto-generated />
using System;
using System.Collections.Generic;
using EazyPlanner.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EazyPlanner.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240213155852_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EazyPlanner.Domain.Entities.BankrollAccount", b =>
                {
                    b.Property<int>("BankrollAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankrollAccountId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.BankrollAccount.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("BankrollAccountId");

                    b.ToTable("BankrollAccount");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.CostCenter", b =>
                {
                    b.Property<int>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostCenterId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.CostCenter.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.CustomerSupplier", b =>
                {
                    b.Property<int>("CustomerSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerSupplierId"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFantasy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Address", "EazyPlanner.Domain.Entities.CustomerSupplier.Address#AddressBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("BuildingNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SecondaryAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Contact", "EazyPlanner.Domain.Entities.CustomerSupplier.Contact#ContactBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<byte[]>("Image")
                                .HasColumnType("varbinary(max)");

                            b1.Property<string>("Phone1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Website")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.CustomerSupplier.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("CustomerSupplierId");

                    b.ToTable("CustomerSupplier");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.FinanceCategory", b =>
                {
                    b.Property<int>("FinanceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinanceCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.FinanceCategory.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("FinanceCategoryId");

                    b.ToTable("FinanceCategory");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.FinancialRecord", b =>
                {
                    b.Property<int>("FinancialRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialRecordId"));

                    b.Property<decimal?>("ActualAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("BankrollAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CosteCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinanceCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal>("PlannedAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.FinancialRecord.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("FinancialRecordId");

                    b.HasIndex("BankrollAccountId");

                    b.HasIndex("CosteCenterId");

                    b.HasIndex("CustomerSupplierId");

                    b.HasIndex("FinanceCategoryId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("FinancialRecord");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.Invoice.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.PaymentMethod.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.People", b =>
                {
                    b.Property<int>("PeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeopleId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Create", "EazyPlanner.Domain.Entities.People.Create#CreateBase", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime?>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UpdateBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");
                        });

                    b.HasKey("PeopleId");

                    b.HasIndex("CustomerSupplierId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.FinancialRecord", b =>
                {
                    b.HasOne("EazyPlanner.Domain.Entities.BankrollAccount", "BankrollAccount")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("BankrollAccountId");

                    b.HasOne("EazyPlanner.Domain.Entities.CostCenter", "CostCenter")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("CosteCenterId");

                    b.HasOne("EazyPlanner.Domain.Entities.CustomerSupplier", "CustomerSupplier")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("CustomerSupplierId");

                    b.HasOne("EazyPlanner.Domain.Entities.FinanceCategory", "FinanceCategory")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("FinanceCategoryId");

                    b.HasOne("EazyPlanner.Domain.Entities.Invoice", "Invoice")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("EazyPlanner.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("PaymentMethodId");

                    b.Navigation("BankrollAccount");

                    b.Navigation("CostCenter");

                    b.Navigation("CustomerSupplier");

                    b.Navigation("FinanceCategory");

                    b.Navigation("Invoice");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.People", b =>
                {
                    b.HasOne("EazyPlanner.Domain.Entities.CustomerSupplier", "CustomerSupplier")
                        .WithMany("Peoples")
                        .HasForeignKey("CustomerSupplierId");

                    b.Navigation("CustomerSupplier");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.BankrollAccount", b =>
                {
                    b.Navigation("FinancialRecords");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.CostCenter", b =>
                {
                    b.Navigation("FinancialRecords");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.CustomerSupplier", b =>
                {
                    b.Navigation("FinancialRecords");

                    b.Navigation("Peoples");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.FinanceCategory", b =>
                {
                    b.Navigation("FinancialRecords");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("FinancialRecords");
                });

            modelBuilder.Entity("EazyPlanner.Domain.Entities.PaymentMethod", b =>
                {
                    b.Navigation("FinancialRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
